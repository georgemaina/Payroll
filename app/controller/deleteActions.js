/*
 * File: app/controller/deleteActions.js
 * Date: Sun Mar 08 2015 15:46:56 GMT+0300 (E. Africa Standard Time)
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PayrollApp.controller.deleteActions', {
    extend: 'Ext.app.Controller',

    views: [
        'Departments',
        'PayTypesForm',
        'JobTitles',
        'Banks',
        'BankBranches',
        'JobGroups',
        'EmpPayments'
    ],

    refs: [
        {
            ref: 'departmentsform',
            selector: 'departmentsform',
            xtype: 'departmentsform'
        },
        {
            ref: 'paytypesform',
            selector: 'paytypesform',
            xtype: 'paytypesform'
        },
        {
            ref: 'banks',
            selector: 'banks',
            xtype: 'banks'
        },
        {
            ref: 'bankbranches',
            selector: 'bankbranches',
            xtype: 'bankbranches'
        },
        {
            ref: 'jobtitles',
            selector: 'jobtitles',
            xtype: 'jobtitles'
        },
        {
            ref: 'jobgroups',
            selector: 'jobgroups',
            xtype: 'jobgroups'
        },
        {
            ref: 'emppayments',
            selector: 'emppayments',
            xtype: 'emppayments'
        }
    ],

    deleteDepartment: function(view, rowIndex, colIndex, item, e, record, row) {

        var dept=record.get('DeptName');

            Ext.Msg.show({
                title:'Import Payments?',
                msg: 'Are you sure you want to delete '+dept,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteDepartment',
                            params: {
                                ID:record.get('ID')
                            },
                            waitMsg: 'Deleting departments ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var deptsStore=Ext.data.StoreManager.lookup('PayDeptStore');
                                deptsStore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the department, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    init: function(application) {
        this.control({
            'departmentsform actioncolumn[id=deleteDept]':{
               //click:PayrollApp.app.getController('ProllActions').deleteDepartment()
                click:this.deleteDepartment
            },
            'paytypesform actioncolumn[id=deletePaytypes]':{
                click:this.deletePaytypes
            },
            'payratesform actioncolumn[id=deleteRates]':{
                click:this.deleteRates
            },
            'banks actioncolumn[id=deleteBank]':{
                click:this.deleteBanks
            },
            'bankbranches actioncolumn[id=deleteBankBranch]':{
                click:this.deleteBankBranches
            },
            'jobtitles actioncolumn[id=deleteJobtitle]':{
                click:this.deleteJobtitle
            },
            'jobgroups actioncolumn[id=deleteJobgroup]':{
                click:this.deleteJobgroup
            },
            'payrollbranches actioncolumn[id=deleteBranch]':{
                click:this.deleteBranches
            },
            '#paydeductgrid actioncolumn[id=delete]':{
                click:this.deletePayments
            }
        });
    },

    deletePaytypes: function(view, rowIndex, colIndex, item, e, record, row) {

        var paytype=record.get('PayType');

        Ext.Msg.show({
            title:'Delete Pay Types?',
            msg: 'Are you sure you want to delete '+paytype,
            buttons: Ext.Msg.YESNOCANCEL,
            icon: Ext.Msg.QUESTION,
            fn: function(rec) {
                if (rec === "yes") {
                    Ext.Ajax.request({
                        url: 'data/deleteFunctions.php?task=deleteMethod',
                        params: {
                            ID:record.get('ID'),
                            tableName:'proll_paytypes'
                        },
                        waitMsg: 'Deleting departments ...',
                        success: function(response){
                            var text = response.responseText;
                            Ext.Msg.alert('Delete','Record Successfully deleted');
                            var ptypesStore=Ext.data.StoreManager.lookup('PayTypeStore');
                            ptypesStore.load({});

                        },
                        failure:function(response){
                            var resp = JSON.parseJSON(response);
                            Ext.Msg.alert('Error','There was a problem deleting the Paytype, Contact System Administrator');
                        }
                    });

                }
            }
        });

    },

    deleteRates: function(view, rowIndex, colIndex, item, e, record, row) {

        var payrates=record.get('RateName');

            Ext.Msg.show({
                title:'Delete Rates?',
                msg: 'Are you sure you want to delete '+payrates,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_rates'
                            },
                            waitMsg: 'Deleting Rates ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var pratesStore=Ext.data.StoreManager.lookup('PayRatesStore');
                                pratesStore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Rates, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deleteBanks: function(view, rowIndex, colIndex, item, e, record, row) {

        var banks=record.get('BankName');

            Ext.Msg.show({
                title:'Delete Banks?',
                msg: 'Are you sure you want to delete '+banks,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_banks'
                            },
                            waitMsg: 'Deleting Banks ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var bankstore=Ext.data.StoreManager.lookup('BankStore');
                                bankstore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Bank, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deleteBankBranches: function(view, rowIndex, colIndex, item, e, record, row) {

        var bankbranches=record.get('BankBranch');

            Ext.Msg.show({
                title:'Delete Bank Branches?',
                msg: 'Are you sure you want to delete '+bankbranches,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_bankbranches'
                            },
                            waitMsg: 'Deleting Banks ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var bankBranchstore=Ext.data.StoreManager.lookup('BankBrancheStore');
                                bankBranchstore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Bank, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deleteJobgroup: function(view, rowIndex, colIndex, item, e, record, row) {

        var jobgroups=record.get('GroupName');

            Ext.Msg.show({
                title:'Delete Bank JobGroups?',
                msg: 'Are you sure you want to delete '+jobgroups,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_jobgroups'
                            },
                            waitMsg: 'Deleting Job Groups ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var jgroupstore=Ext.data.StoreManager.lookup('JobGroupStore');
                                jgroupstore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Job Groups, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deleteJobtitle: function(view, rowIndex, colIndex, item, e, record, row) {

        var jobtitles=record.get('JobTitle');

            Ext.Msg.show({
                title:'Delete Job Title?',
                msg: 'Are you sure you want to delete '+jobtitles,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_jobtitles'
                            },
                            waitMsg: 'Deleting Job Title ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var jobtitlesstore=Ext.data.StoreManager.lookup('JobTitlesStore');
                                jobtitlesstore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Job Titles, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deleteBranches: function(view,rowIndex,colIndex,item,e,record,row) {

        var branches=record.get('branchName');

            Ext.Msg.show({
                title:'Delete Payroll Branch?',
                msg: 'Are you sure you want to delete '+branches,
                buttons: Ext.Msg.YESNOCANCEL,
                icon: Ext.Msg.QUESTION,
                fn: function(rec) {
                    if (rec === "yes") {
                        Ext.Ajax.request({
                            url: 'data/deleteFunctions.php?task=deleteMethod',
                            params: {
                                ID:record.get('ID'),
                                tableName:'proll_paybranch'
                            },
                            waitMsg: 'Deleting Payroll Branches ...',
                            success: function(response){
                                var text = response.responseText;
                                Ext.Msg.alert('Delete','Record Successfully deleted');
                                var branchesstore=Ext.data.StoreManager.lookup('PayBranchStore');
                                branchesstore.load({});

                            },
                            failure:function(response){
                                var resp = JSON.parseJSON(response);
                                Ext.Msg.alert('Error','There was a problem deleting the Branches, Contact System Administrator');
                            }
                        });

                    }
                }
            });

    },

    deletePayments: function(view, rowIndex, colIndex, item, e, record, row) {
        //alert(record.get('PID'));


        Ext.Msg.show({
            title:'Import Payments?',
            msg: 'Are you sure you want to Delete this item',
            buttons: Ext.Msg.YESNOCANCEL,
            icon: Ext.Msg.QUESTION,
            fn: function(rec) {
                if (rec === "yes") {
                    Ext.Ajax.request({
                        url: 'data/getDataFunctions.php?task=deletePayment',
                        params: {
                            pid:record.get('PID'),
                            Payment:record.get('PayName')
                        },
                        waitMsg: 'Importing Payments ...',
                        success: function(response){
                            var text = response.responseText;
                            Ext.Msg.alert('Delete Status',text);
                            var emppaymentstore=Ext.data.StoreManager.lookup('EmpPaymentStore');
                            emppaymentstore.load({
                                params: {
                                    pid: record.get('PID')
                                },
                                callback: function(records, operation, success) {

                                },
                                scope: this
                            });


                        },
                        failure:function(response){
                            var resp = JSON.parseJSON(response);
                            Ext.Msg.alert(resp.error);
                        }
                    });

                }
            }
        });

    }

});
